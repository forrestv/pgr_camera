## *********************************************************
## 
## File autogenerated for the pgr_camera package 
## by the dynamic_reconfigure package.
## Please do not edit.
## 
## ********************************************************/

##**********************************************************
## Software License Agreement (BSD License)
##
##  Copyright (c) 2008, Willow Garage, Inc.
##  All rights reserved.
##
##  Redistribution and use in source and binary forms, with or without
##  modification, are permitted provided that the following conditions
##  are met:
##
##   * Redistributions of source code must retain the above copyright
##     notice, this list of conditions and the following disclaimer.
##   * Redistributions in binary form must reproduce the above
##     copyright notice, this list of conditions and the following
##     disclaimer in the documentation and/or other materials provided
##     with the distribution.
##   * Neither the name of the Willow Garage nor the names of its
##     contributors may be used to endorse or promote products derived
##     from this software without specific prior written permission.
##
##  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
##  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
##  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
##  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
##  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
##  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
##  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
##  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
##  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
##  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
##  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
##  POSSIBILITY OF SUCH DAMAGE.
##**********************************************************/

config_description = [{'srcline': 18, 'description': 'Camera mode (streaming vs. polled)', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '../cfg/PGRCamera.cfg', 'name': 'trigger_mode', 'edit_method': "{'enum_description': 'Enum to set the mode.', 'enum': [{'srcline': 13, 'description': 'Streaming mode', 'srcfile': '../cfg/PGRCamera.cfg', 'cconsttype': 'const char * const', 'value': 'streaming', 'ctype': 'std::string', 'type': 'str', 'name': 'StreamingMode'}, {'srcline': 14, 'description': 'Polled mode', 'srcfile': '../cfg/PGRCamera.cfg', 'cconsttype': 'const char * const', 'value': 'polled', 'ctype': 'std::string', 'type': 'str', 'name': 'PolledMode'}]}", 'default': 'streaming', 'level': 1, 'min': '', 'type': 'str'}, {'srcline': 19, 'description': 'Sets the camera exposure duration to automatic. Causes the @b exposure setting to be ignored.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '../cfg/PGRCamera.cfg', 'name': 'auto_exposure', 'edit_method': '', 'default': True, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 20, 'description': 'Camera exposure time in seconds.', 'max': 1.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '../cfg/PGRCamera.cfg', 'name': 'exposure', 'edit_method': '', 'default': 0.014999999999999999, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 21, 'description': 'Sets the analog gain to automatic. Causes the @b gain setting to be ignored.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '../cfg/PGRCamera.cfg', 'name': 'auto_gain', 'edit_method': '', 'default': True, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 22, 'description': 'The gain level in dB.', 'max': 16, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/PGRCamera.cfg', 'name': 'gain', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 23, 'description': 'Whether whitebalance will continuously adjust to the current scene. Causes the @b whitebalance_red and @b whitebalance_blue settings to be ignored.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '../cfg/PGRCamera.cfg', 'name': 'auto_whitebalance', 'edit_method': '', 'default': True, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 24, 'description': 'Red gain as a percentage of the camera default setting.', 'max': 100, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/PGRCamera.cfg', 'name': 'whitebalance_red', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 25, 'description': 'Blue gain as a percentage of the camera default setting.', 'max': 100, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/PGRCamera.cfg', 'name': 'whitebalance_blue', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 27, 'description': 'The optical camera TF frame set in message headers.', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '../cfg/PGRCamera.cfg', 'name': 'frame_id', 'edit_method': '', 'default': 'camera', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 28, 'description': 'X offset of the region of interest.', 'max': 4000, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/PGRCamera.cfg', 'name': 'roi_x_offset', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 29, 'description': 'Y offset of the region of interest.', 'max': 4000, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/PGRCamera.cfg', 'name': 'roi_y_offset', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 30, 'description': 'Width of the region of interest (0 for automatic).', 'max': 4000, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/PGRCamera.cfg', 'name': 'roi_width', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 31, 'description': 'Height of the region of interest (0 for automatic).', 'max': 4000, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/PGRCamera.cfg', 'name': 'roi_height', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 33, 'description': 'Capture width', 'max': 640, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/PGRCamera.cfg', 'name': 'width', 'edit_method': '', 'default': 640, 'level': 0, 'min': 640, 'type': 'int'}, {'srcline': 34, 'description': 'Capture height', 'max': 480, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/PGRCamera.cfg', 'name': 'height', 'edit_method': '', 'default': 480, 'level': 0, 'min': 480, 'type': 'int'}, {'srcline': 35, 'description': 'Capture format (Y8,RGB)', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '../cfg/PGRCamera.cfg', 'name': 'format', 'edit_method': "{'enum_description': 'Enum to set the format.', 'enum': [{'srcline': 15, 'description': 'Y8 mode', 'srcfile': '../cfg/PGRCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Y8', 'ctype': 'std::string', 'type': 'str', 'name': 'Y8'}, {'srcline': 16, 'description': 'RGB mode', 'srcfile': '../cfg/PGRCamera.cfg', 'cconsttype': 'const char * const', 'value': 'RGB', 'ctype': 'std::string', 'type': 'str', 'name': 'RGB'}]}", 'default': 'RGB', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 36, 'description': 'Camera frame rate in Hz.', 'max': 60.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '../cfg/PGRCamera.cfg', 'name': 'frame_rate', 'edit_method': '', 'default': 30.0, 'level': 0, 'min': 15.0, 'type': 'double'}]

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

for param in config_description:
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

PGRCamera_StreamingMode = 'streaming'
PGRCamera_PolledMode = 'polled'
PGRCamera_Y8 = 'Y8'
PGRCamera_RGB = 'RGB'
